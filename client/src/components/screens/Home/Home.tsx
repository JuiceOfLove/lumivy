import { useEffect, useRef } from "react";
import { Link } from "react-router";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import { ScrollSmoother } from "gsap/ScrollSmoother";

import styles from "./Home.module.css";

gsap.registerPlugin(ScrollTrigger, ScrollSmoother);


const Home = () => {
  const wrapper = useRef<HTMLDivElement>(null);
  const content = useRef<HTMLDivElement>(null);

  useEffect(() => {
    ScrollSmoother.create({
      wrapper: wrapper.current!,
      content: content.current!,
      smooth: 1.2,
      effects: true,
    });

    gsap.from(`.${styles.heroTitle}`, {
      y: -80,
      opacity: 0,
      duration: 1.2,
      ease: "power3.out",
    });
    gsap.from(`.${styles.heroSub}`, {
      y: 60,
      opacity: 0,
      duration: 1,
      delay: 0.25,
      ease: "power3.out",
    });
    gsap.from(`.${styles.cta}`, {
      scale: 0.8,
      opacity: 0,
      duration: 0.8,
      delay: 0.5,
      ease: "back.out(1.7)",
    });

    gsap.utils
      .toArray<HTMLImageElement>(`.${styles.parallaxImg}`)
      .forEach((img) => {
        const speed = Number(img.dataset.speed) || 1;
        gsap.to(img, {
          yPercent: speed * 100,
          ease: "none",
          scrollTrigger: {
            trigger: img,
            start: "top bottom",
            scrub: true,
          },
        });
      });
  }, []);

  return (
    <div ref={wrapper} className={styles.smoothWrapper}>
      <div ref={content} className={styles.smoothContent}>
        <section className={styles.heroSection}>
          <h1 className={`${styles.heroTitle} ${styles.gradientTxt}`}>
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Lumivy
          </h1>

          <p className={styles.heroSub}>
            –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤–µ–¥–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏, –æ–±—â–∞–π—Ç–µ—Å—å –≤ —Å–µ–º–µ–π–Ω–æ–º —á–∞—Ç–µ ‚Äî –≤—Å—ë –≤ –µ–¥–∏–Ω–æ–π ¬´–ª–∞–≤–∞–Ω–¥–æ–≤–æ–π¬ª —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ.
          </p>

          <Link to="/dashboard" className={`${styles.cta} ${styles.btnPurple}`}>
            –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
          </Link>
        </section>
        <section className={styles.featureSection}>
          <div className={styles.featureCard}>
            <h3>üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä–∏</h3>
            <p>
              –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –ø–æ–¥ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Å–µ–º–µ–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è.
            </p>
          </div>
          <div className={styles.featureCard}>
            <h3>üí¨ –ß–∞—Ç</h3>
            <p>
              –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–µ–ª–∏—Ç–µ—Å—å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
            </p>
          </div>
          <div className={styles.featureCard}>
            <h3>üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
            <p>
              –°–ø—Ä–æ—Å–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ‚Äî –ø–æ–ª—É—á–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å.
            </p>
          </div>
        </section>

        <section className={styles.bottomCTA}>
          <h2>–ì–æ—Ç–æ–≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?</h2>
          <Link
            to="/auth/register"
            className={`${styles.btnPurple} ${styles.ctaSecondary}`}
          >
            –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
          </Link>
        </section>
      </div>
    </div>
  );
};

export default Home;